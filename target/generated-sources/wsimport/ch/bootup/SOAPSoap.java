
package ch.bootup;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SOAPSoap", targetNamespace = "http://bootup.ch/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SOAPSoap {


    /**
     * Gets the whole project structure as xml including CKS.
     * 
     * @return
     *     returns ch.bootup.GetProjectStructureResponse.GetProjectStructureResult
     */
    @WebMethod(action = "http://bootup.ch/getProjectStructure")
    @WebResult(name = "getProjectStructureResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "getProjectStructure", targetNamespace = "http://bootup.ch/", className = "ch.bootup.GetProjectStructure")
    @ResponseWrapper(localName = "getProjectStructureResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.GetProjectStructureResponse")
    public ch.bootup.GetProjectStructureResponse.GetProjectStructureResult getProjectStructure();

    /**
     * Calculates the check sum over the whole project structure xml.<br>This call offers the opportunity to quick check if project has changed.<p>Typical use case at first start:<br>1. getProjectStructure() -> store data locally<br>2. build up GUI<p>Typical use case at following starts:<br>1. getProjectStructureCKS() -> compare it to locally stored copy<br>2a. CKS are equal, proceed to 4.<br>2b. CKS are not equal<br>3. getProjectStructure() -> store data locally<br>4. build up GUI
     * 
     * @return
     *     returns int
     */
    @WebMethod(action = "http://bootup.ch/getProjectStructureCKS")
    @WebResult(name = "getProjectStructureCKSResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "getProjectStructureCKS", targetNamespace = "http://bootup.ch/", className = "ch.bootup.GetProjectStructureCKS")
    @ResponseWrapper(localName = "getProjectStructureCKSResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.GetProjectStructureCKSResponse")
    public int getProjectStructureCKS();

    /**
     * The state change monitoring service(SCMS) is a performance utility to<br>reduce data trafic for polling of the states of the blocks in question.<br>Attaches the refered blocks to the state change monitoring service(SCMS).<br>true:ok, false:invalid block guid
     * 
     * @param blockGuids
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "SCMS_attachBlock", action = "http://bootup.ch/SCMS_attachBlock")
    @WebResult(name = "SCMS_attachBlockResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "SCMS_attachBlock", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SCMSAttachBlock")
    @ResponseWrapper(localName = "SCMS_attachBlockResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SCMSAttachBlockResponse")
    public boolean scmsAttachBlock(
        @WebParam(name = "BlockGuids", targetNamespace = "http://bootup.ch/")
        ArrayOfGuid blockGuids);

    /**
     * Detaches the refered blocks from the state change monitoring service(SCMS).
     * 
     * @param blockGuids
     */
    @WebMethod(operationName = "SCMS_detachBlock", action = "http://bootup.ch/SCMS_detachBlock")
    @RequestWrapper(localName = "SCMS_detachBlock", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SCMSDetachBlock")
    @ResponseWrapper(localName = "SCMS_detachBlockResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SCMSDetachBlockResponse")
    public void scmsDetachBlock(
        @WebParam(name = "BlockGuids", targetNamespace = "http://bootup.ch/")
        ArrayOfGuid blockGuids);

    /**
     * Gets the list of all blocks, where state has changed,<br> since last call to SCMS_getChangedStates.
     * 
     * @return
     *     returns ch.bootup.ArrayOfGuid
     */
    @WebMethod(operationName = "SCMS_getChangedStates", action = "http://bootup.ch/SCMS_getChangedStates")
    @WebResult(name = "SCMS_getChangedStatesResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "SCMS_getChangedStates", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SCMSGetChangedStates")
    @ResponseWrapper(localName = "SCMS_getChangedStatesResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SCMSGetChangedStatesResponse")
    public ArrayOfGuid scmsGetChangedStates();

    /**
     * Gets the actual state of the switching actuator.
     * 
     * @param blockGuid
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Switch_1_getState", action = "http://bootup.ch/Switch_1_getState")
    @WebResult(name = "Switch_1_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Switch_1_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Switch1GetState")
    @ResponseWrapper(localName = "Switch_1_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Switch1GetStateResponse")
    public String switch1GetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Commands switching actuator into ON state.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Switch_1_switchOn", action = "http://bootup.ch/Switch_1_switchOn")
    @RequestWrapper(localName = "Switch_1_switchOn", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Switch1SwitchOn")
    @ResponseWrapper(localName = "Switch_1_switchOnResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Switch1SwitchOnResponse")
    public void switch1SwitchOn(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Commands switching actuator into OFF state.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Switch_1_switchOff", action = "http://bootup.ch/Switch_1_switchOff")
    @RequestWrapper(localName = "Switch_1_switchOff", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Switch1SwitchOff")
    @ResponseWrapper(localName = "Switch_1_switchOffResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Switch1SwitchOffResponse")
    public void switch1SwitchOff(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual state of the dimming actuator.
     * 
     * @param blockGuid
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Dimmer_1_getState", action = "http://bootup.ch/Dimmer_1_getState")
    @WebResult(name = "Dimmer_1_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Dimmer_1_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1GetState")
    @ResponseWrapper(localName = "Dimmer_1_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1GetStateResponse")
    public String dimmer1GetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual brightness of the dimming actuator [0..100%].
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Dimmer_1_getBrightness", action = "http://bootup.ch/Dimmer_1_getBrightness")
    @WebResult(name = "Dimmer_1_getBrightnessResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Dimmer_1_getBrightness", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1GetBrightness")
    @ResponseWrapper(localName = "Dimmer_1_getBrightnessResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1GetBrightnessResponse")
    public double dimmer1GetBrightness(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Commands dimming actuator into ON state.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Dimmer_1_switchOn", action = "http://bootup.ch/Dimmer_1_switchOn")
    @RequestWrapper(localName = "Dimmer_1_switchOn", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1SwitchOn")
    @ResponseWrapper(localName = "Dimmer_1_switchOnResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1SwitchOnResponse")
    public void dimmer1SwitchOn(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Commands dimming actuator into OFF state.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Dimmer_1_switchOff", action = "http://bootup.ch/Dimmer_1_switchOff")
    @RequestWrapper(localName = "Dimmer_1_switchOff", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1SwitchOff")
    @ResponseWrapper(localName = "Dimmer_1_switchOffResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1SwitchOffResponse")
    public void dimmer1SwitchOff(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Commands dimming actuator to the given brightness [0..100%].
     * 
     * @param iBrightnessValue
     * @param blockGuid
     */
    @WebMethod(operationName = "Dimmer_1_setBrightness", action = "http://bootup.ch/Dimmer_1_setBrightness")
    @RequestWrapper(localName = "Dimmer_1_setBrightness", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1SetBrightness")
    @ResponseWrapper(localName = "Dimmer_1_setBrightnessResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Dimmer1SetBrightnessResponse")
    public void dimmer1SetBrightness(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid,
        @WebParam(name = "iBrightnessValue", targetNamespace = "http://bootup.ch/")
        double iBrightnessValue);

    /**
     * Gets the actual state of the jalousie actuator.
     * 
     * @param blockGuid
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Jalousie_1_getState", action = "http://bootup.ch/Jalousie_1_getState")
    @WebResult(name = "Jalousie_1_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Jalousie_1_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1GetState")
    @ResponseWrapper(localName = "Jalousie_1_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1GetStateResponse")
    public String jalousie1GetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual position [0..100%] 0%=open, 100%=closed.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Jalousie_1_getPosition", action = "http://bootup.ch/Jalousie_1_getPosition")
    @WebResult(name = "Jalousie_1_getPositionResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Jalousie_1_getPosition", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1GetPosition")
    @ResponseWrapper(localName = "Jalousie_1_getPositionResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1GetPositionResponse")
    public double jalousie1GetPosition(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Moves the jalousie up.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Jalousie_1_moveUp", action = "http://bootup.ch/Jalousie_1_moveUp")
    @RequestWrapper(localName = "Jalousie_1_moveUp", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveUp")
    @ResponseWrapper(localName = "Jalousie_1_moveUpResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveUpResponse")
    public void jalousie1MoveUp(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Moves the jalousie down.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Jalousie_1_moveDown", action = "http://bootup.ch/Jalousie_1_moveDown")
    @RequestWrapper(localName = "Jalousie_1_moveDown", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveDown")
    @ResponseWrapper(localName = "Jalousie_1_moveDownResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveDownResponse")
    public void jalousie1MoveDown(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Moves the jalousie to shade.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Jalousie_1_moveToShandingPos", action = "http://bootup.ch/Jalousie_1_moveToShandingPos")
    @RequestWrapper(localName = "Jalousie_1_moveToShandingPos", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveToShandingPos")
    @ResponseWrapper(localName = "Jalousie_1_moveToShandingPosResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveToShandingPosResponse")
    public void jalousie1MoveToShandingPos(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Moves the jalousie to given position [0..100%].In position 0% blades will be fully open, in position 100%,in positions inbetween blades will be slightly turned
     * 
     * @param idPosition
     * @param blockGuid
     */
    @WebMethod(operationName = "Jalousie_1_moveToPos", action = "http://bootup.ch/Jalousie_1_moveToPos")
    @RequestWrapper(localName = "Jalousie_1_moveToPos", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveToPos")
    @ResponseWrapper(localName = "Jalousie_1_moveToPosResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1MoveToPosResponse")
    public void jalousie1MoveToPos(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid,
        @WebParam(name = "idPosition", targetNamespace = "http://bootup.ch/")
        double idPosition);

    /**
     * Moves the jalousie up.
     * 
     * @param blockGuid
     */
    @WebMethod(operationName = "Jalousie_1_stop", action = "http://bootup.ch/Jalousie_1_stop")
    @RequestWrapper(localName = "Jalousie_1_stop", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1Stop")
    @ResponseWrapper(localName = "Jalousie_1_stopResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.Jalousie1StopResponse")
    public void jalousie1Stop(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual brightness value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Brightness_getValue", action = "http://bootup.ch/Brightness_getValue")
    @WebResult(name = "Brightness_getValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Brightness_getValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.BrightnessGetValue")
    @ResponseWrapper(localName = "Brightness_getValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.BrightnessGetValueResponse")
    public double brightnessGetValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the filtered brightness value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Brightness_getValueFiltered", action = "http://bootup.ch/Brightness_getValueFiltered")
    @WebResult(name = "Brightness_getValueFilteredResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Brightness_getValueFiltered", targetNamespace = "http://bootup.ch/", className = "ch.bootup.BrightnessGetValueFiltered")
    @ResponseWrapper(localName = "Brightness_getValueFilteredResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.BrightnessGetValueFilteredResponse")
    public double brightnessGetValueFiltered(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the amplified brightness value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Brightness_getValueAmplified", action = "http://bootup.ch/Brightness_getValueAmplified")
    @WebResult(name = "Brightness_getValueAmplifiedResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Brightness_getValueAmplified", targetNamespace = "http://bootup.ch/", className = "ch.bootup.BrightnessGetValueAmplified")
    @ResponseWrapper(localName = "Brightness_getValueAmplifiedResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.BrightnessGetValueAmplifiedResponse")
    public double brightnessGetValueAmplified(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual temperature value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Counter_getValue", action = "http://bootup.ch/Counter_getValue")
    @WebResult(name = "Counter_getValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Counter_getValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.CounterGetValue")
    @ResponseWrapper(localName = "Counter_getValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.CounterGetValueResponse")
    public double counterGetValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the current power value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "EnergyMeter_getCurrentValuekW", action = "http://bootup.ch/EnergyMeter_getCurrentValuekW")
    @WebResult(name = "EnergyMeter_getCurrentValuekWResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "EnergyMeter_getCurrentValuekW", targetNamespace = "http://bootup.ch/", className = "ch.bootup.EnergyMeterGetCurrentValuekW")
    @ResponseWrapper(localName = "EnergyMeter_getCurrentValuekWResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.EnergyMeterGetCurrentValuekWResponse")
    public double energyMeterGetCurrentValuekW(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the cumulative energy value of selected tariff.
     * 
     * @param tariff
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "EnergyMeter_getCumulativeValuekWh", action = "http://bootup.ch/EnergyMeter_getCumulativeValuekWh")
    @WebResult(name = "EnergyMeter_getCumulativeValuekWhResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "EnergyMeter_getCumulativeValuekWh", targetNamespace = "http://bootup.ch/", className = "ch.bootup.EnergyMeterGetCumulativeValuekWh")
    @ResponseWrapper(localName = "EnergyMeter_getCumulativeValuekWhResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.EnergyMeterGetCumulativeValuekWhResponse")
    public double energyMeterGetCumulativeValuekWh(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid,
        @WebParam(name = "Tariff", targetNamespace = "http://bootup.ch/")
        int tariff);

    /**
     * Gets the tariff.
     * 
     * @param blockGuid
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EnergyMeter_getTariff", action = "http://bootup.ch/EnergyMeter_getTariff")
    @WebResult(name = "EnergyMeter_getTariffResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "EnergyMeter_getTariff", targetNamespace = "http://bootup.ch/", className = "ch.bootup.EnergyMeterGetTariff")
    @ResponseWrapper(localName = "EnergyMeter_getTariffResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.EnergyMeterGetTariffResponse")
    public int energyMeterGetTariff(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual counter value.
     * 
     * @param blockGuid
     * @return
     *     returns int
     */
    @WebMethod(operationName = "PulseCounter_getCounterValue", action = "http://bootup.ch/PulseCounter_getCounterValue")
    @WebResult(name = "PulseCounter_getCounterValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "PulseCounter_getCounterValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.PulseCounterGetCounterValue")
    @ResponseWrapper(localName = "PulseCounter_getCounterValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.PulseCounterGetCounterValueResponse")
    public int pulseCounterGetCounterValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the alarm level value.
     * 
     * @param blockGuid
     * @return
     *     returns int
     */
    @WebMethod(operationName = "PulseCounter_getAlarmLevel", action = "http://bootup.ch/PulseCounter_getAlarmLevel")
    @WebResult(name = "PulseCounter_getAlarmLevelResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "PulseCounter_getAlarmLevel", targetNamespace = "http://bootup.ch/", className = "ch.bootup.PulseCounterGetAlarmLevel")
    @ResponseWrapper(localName = "PulseCounter_getAlarmLevelResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.PulseCounterGetAlarmLevelResponse")
    public int pulseCounterGetAlarmLevel(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the time stamp where last time the counter has been reseted.
     * 
     * @param blockGuid
     * @return
     *     returns javax.xml.datatype.XMLGregorianCalendar
     */
    @WebMethod(operationName = "PulseCounter_getLastResetTimeStamp", action = "http://bootup.ch/PulseCounter_getLastResetTimeStamp")
    @WebResult(name = "PulseCounter_getLastResetTimeStampResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "PulseCounter_getLastResetTimeStamp", targetNamespace = "http://bootup.ch/", className = "ch.bootup.PulseCounterGetLastResetTimeStamp")
    @ResponseWrapper(localName = "PulseCounter_getLastResetTimeStampResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.PulseCounterGetLastResetTimeStampResponse")
    public XMLGregorianCalendar pulseCounterGetLastResetTimeStamp(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual temperature value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Temperature_getActualValue", action = "http://bootup.ch/Temperature_getActualValue")
    @WebResult(name = "Temperature_getActualValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Temperature_getActualValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.TemperatureGetActualValue")
    @ResponseWrapper(localName = "Temperature_getActualValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.TemperatureGetActualValueResponse")
    public double temperatureGetActualValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the temperature actual value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "RoomTemperatureControl_getTemperatureActualValue", action = "http://bootup.ch/RoomTemperatureControl_getTemperatureActualValue")
    @WebResult(name = "RoomTemperatureControl_getTemperatureActualValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "RoomTemperatureControl_getTemperatureActualValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetTemperatureActualValue")
    @ResponseWrapper(localName = "RoomTemperatureControl_getTemperatureActualValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetTemperatureActualValueResponse")
    public double roomTemperatureControlGetTemperatureActualValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual temperature setpoint value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "RoomTemperatureControl_getTemperatureSetpointValue", action = "http://bootup.ch/RoomTemperatureControl_getTemperatureSetpointValue")
    @WebResult(name = "RoomTemperatureControl_getTemperatureSetpointValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "RoomTemperatureControl_getTemperatureSetpointValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetTemperatureSetpointValue")
    @ResponseWrapper(localName = "RoomTemperatureControl_getTemperatureSetpointValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetTemperatureSetpointValueResponse")
    public double roomTemperatureControlGetTemperatureSetpointValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the humidity actual value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "RoomTemperatureControl_getActualHumitiyValue", action = "http://bootup.ch/RoomTemperatureControl_getActualHumitiyValue")
    @WebResult(name = "RoomTemperatureControl_getActualHumitiyValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "RoomTemperatureControl_getActualHumitiyValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetActualHumitiyValue")
    @ResponseWrapper(localName = "RoomTemperatureControl_getActualHumitiyValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetActualHumitiyValueResponse")
    public double roomTemperatureControlGetActualHumitiyValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the humidity setpoint value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "RoomTemperatureControl_getSetpointHumitiyValue", action = "http://bootup.ch/RoomTemperatureControl_getSetpointHumitiyValue")
    @WebResult(name = "RoomTemperatureControl_getSetpointHumitiyValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "RoomTemperatureControl_getSetpointHumitiyValue", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetSetpointHumitiyValue")
    @ResponseWrapper(localName = "RoomTemperatureControl_getSetpointHumitiyValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetSetpointHumitiyValueResponse")
    public double roomTemperatureControlGetSetpointHumitiyValue(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the CO2 actual value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "RoomTemperatureControl_getActualCO2Value", action = "http://bootup.ch/RoomTemperatureControl_getActualCO2Value")
    @WebResult(name = "RoomTemperatureControl_getActualCO2ValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "RoomTemperatureControl_getActualCO2Value", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetActualCO2Value")
    @ResponseWrapper(localName = "RoomTemperatureControl_getActualCO2ValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetActualCO2ValueResponse")
    public double roomTemperatureControlGetActualCO2Value(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the CO2 setpoint value.
     * 
     * @param blockGuid
     * @return
     *     returns double
     */
    @WebMethod(operationName = "RoomTemperatureControl_getSetpointCO2Value", action = "http://bootup.ch/RoomTemperatureControl_getSetpointCO2Value")
    @WebResult(name = "RoomTemperatureControl_getSetpointCO2ValueResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "RoomTemperatureControl_getSetpointCO2Value", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetSetpointCO2Value")
    @ResponseWrapper(localName = "RoomTemperatureControl_getSetpointCO2ValueResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.RoomTemperatureControlGetSetpointCO2ValueResponse")
    public double roomTemperatureControlGetSetpointCO2Value(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual leakage state.<br>true=leaking,false=dry
     * 
     * @param blockGuid
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Leakage_getLeakageState", action = "http://bootup.ch/Leakage_getLeakageState")
    @WebResult(name = "Leakage_getLeakageStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Leakage_getLeakageState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.LeakageGetLeakageState")
    @ResponseWrapper(localName = "Leakage_getLeakageStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.LeakageGetLeakageStateResponse")
    public boolean leakageGetLeakageState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual battery state.<br>true=battery ok,false=battery bad
     * 
     * @param blockGuid
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Leakage_getBatteryState", action = "http://bootup.ch/Leakage_getBatteryState")
    @WebResult(name = "Leakage_getBatteryStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "Leakage_getBatteryState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.LeakageGetBatteryState")
    @ResponseWrapper(localName = "Leakage_getBatteryStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.LeakageGetBatteryStateResponse")
    public boolean leakageGetBatteryState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the voltage state.<br>true=there is voltage,false=no voltage
     * 
     * @param blockGuid
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "FSVoltageSensor_getState", action = "http://bootup.ch/FSVoltageSensor_getState")
    @WebResult(name = "FSVoltageSensor_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "FSVoltageSensor_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.FSVoltageSensorGetState")
    @ResponseWrapper(localName = "FSVoltageSensor_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.FSVoltageSensorGetStateResponse")
    public boolean fsVoltageSensorGetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual key card switch state.<br>true=card in,false=card out
     * 
     * @param blockGuid
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "KeyCard_getState", action = "http://bootup.ch/KeyCard_getState")
    @WebResult(name = "KeyCard_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "KeyCard_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.KeyCardGetState")
    @ResponseWrapper(localName = "KeyCard_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.KeyCardGetStateResponse")
    public boolean keyCardGetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual window state.<br>true=closed,false=open
     * 
     * @param blockGuid
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "WindowContact_getState", action = "http://bootup.ch/WindowContact_getState")
    @WebResult(name = "WindowContact_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "WindowContact_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.WindowContactGetState")
    @ResponseWrapper(localName = "WindowContact_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.WindowContactGetStateResponse")
    public boolean windowContactGetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual state of the window handle.<br>INVALID =0,CLOSED =1,TILT =2,OPEN =3
     * 
     * @param blockGuid
     * @return
     *     returns int
     */
    @WebMethod(operationName = "WindowHandle_getState", action = "http://bootup.ch/WindowHandle_getState")
    @WebResult(name = "WindowHandle_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "WindowHandle_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.WindowHandleGetState")
    @ResponseWrapper(localName = "WindowHandle_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.WindowHandleGetStateResponse")
    public int windowHandleGetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Gets the actual state of the state block.
     * 
     * @param blockGuid
     * @return
     *     returns int
     */
    @WebMethod(operationName = "State_getState", action = "http://bootup.ch/State_getState")
    @WebResult(name = "State_getStateResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "State_getState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.StateGetState")
    @ResponseWrapper(localName = "State_getStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.StateGetStateResponse")
    public int stateGetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Sets the actual state of the state block.
     * 
     * @param inNewState
     * @param blockGuid
     */
    @WebMethod(operationName = "State_setState", action = "http://bootup.ch/State_setState")
    @RequestWrapper(localName = "State_setState", targetNamespace = "http://bootup.ch/", className = "ch.bootup.StateSetState")
    @ResponseWrapper(localName = "State_setStateResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.StateSetStateResponse")
    public void stateSetState(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid,
        @WebParam(name = "inNewState", targetNamespace = "http://bootup.ch/")
        int inNewState);

    /**
     * Gets the actual state of the state block.
     * 
     * @param blockGuid
     * @return
     *     returns ch.bootup.ArrayOfString
     */
    @WebMethod(operationName = "SceneController_getScenes", action = "http://bootup.ch/SceneController_getScenes")
    @WebResult(name = "SceneController_getScenesResult", targetNamespace = "http://bootup.ch/")
    @RequestWrapper(localName = "SceneController_getScenes", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SceneControllerGetScenes")
    @ResponseWrapper(localName = "SceneController_getScenesResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SceneControllerGetScenesResponse")
    public ArrayOfString sceneControllerGetScenes(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid);

    /**
     * Calls the given Scene.
     * 
     * @param inSzeneIndex
     * @param blockGuid
     */
    @WebMethod(operationName = "SzeneController_activateScene", action = "http://bootup.ch/SzeneController_activateScene")
    @RequestWrapper(localName = "SzeneController_activateScene", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SzeneControllerActivateScene")
    @ResponseWrapper(localName = "SzeneController_activateSceneResponse", targetNamespace = "http://bootup.ch/", className = "ch.bootup.SzeneControllerActivateSceneResponse")
    public void szeneControllerActivateScene(
        @WebParam(name = "BlockGuid", targetNamespace = "http://bootup.ch/")
        String blockGuid,
        @WebParam(name = "inSzeneIndex", targetNamespace = "http://bootup.ch/")
        int inSzeneIndex);

}
