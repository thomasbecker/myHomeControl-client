
package ch.bootup;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * SOAP interface to access the various blocks of the model.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SOAP", targetNamespace = "http://bootup.ch/", wsdlLocation = "http://192.168.178.24:80/soap.asmx?WSDL")
public class SOAP
    extends Service
{

    private final static URL SOAP_WSDL_LOCATION;
    private final static WebServiceException SOAP_EXCEPTION;
    private final static QName SOAP_QNAME = new QName("http://bootup.ch/", "SOAP");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://192.168.178.24:80/soap.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SOAP_WSDL_LOCATION = url;
        SOAP_EXCEPTION = e;
    }

    public SOAP() {
        super(__getWsdlLocation(), SOAP_QNAME);
    }

    public SOAP(WebServiceFeature... features) {
        super(__getWsdlLocation(), SOAP_QNAME, features);
    }

    public SOAP(URL wsdlLocation) {
        super(wsdlLocation, SOAP_QNAME);
    }

    public SOAP(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SOAP_QNAME, features);
    }

    public SOAP(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SOAP(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SOAPSoap
     */
    @WebEndpoint(name = "SOAPSoap")
    public SOAPSoap getSOAPSoap() {
        return super.getPort(new QName("http://bootup.ch/", "SOAPSoap"), SOAPSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SOAPSoap
     */
    @WebEndpoint(name = "SOAPSoap")
    public SOAPSoap getSOAPSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://bootup.ch/", "SOAPSoap"), SOAPSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns SOAPSoap
     */
    @WebEndpoint(name = "SOAPSoap12")
    public SOAPSoap getSOAPSoap12() {
        return super.getPort(new QName("http://bootup.ch/", "SOAPSoap12"), SOAPSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SOAPSoap
     */
    @WebEndpoint(name = "SOAPSoap12")
    public SOAPSoap getSOAPSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://bootup.ch/", "SOAPSoap12"), SOAPSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SOAP_EXCEPTION!= null) {
            throw SOAP_EXCEPTION;
        }
        return SOAP_WSDL_LOCATION;
    }

}
